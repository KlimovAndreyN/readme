Вопросы:
  1. интерфейсы для публикаций - сделать отдельные или излишние поля...
  2. нужен ли logout?
  3. /api/auth/register саму функциональнность добавления перенести в пользователя?
  4. /api/auth/:id перенести в пользователя /api/user/:id ?
  5. смена пароля?
  6. после регитсрации возвращаю - type: UserRdo, как при getById... где описано что отдать... только id или весь объект?
  7. Swagger Body type
    можно добавить в описание произвольный тект, для какого типа поста какие нужны поля
    !! добавить дополнительную проверку на тип и обязательность полей
  8. UpdatePostDto - @IsOptional() ??  А в Swagger * - обязательный ?
  9. задействовать настройки подключения к postgres из project/apps/blog/blog.dev.env
    сейчас подключение из project/libs/blog/models/prisma/.env  ? или тут для работы prisma-cli и seed.ts ?
    после выполенения generate DATABASE_URL из project/libs/blog/models/prisma/.env закидывается значением по умолчанию, можно переопределить...
    POSTGRES_HOST и POSTGRES_PORT
    А может и сам prisma/.env слинковать с blog/blog.dev.env?
  10. под windows не водит имя для миграции db:migrate ,  выполнил отдельно всю команду из нужного каталога
  11. заполенить данные в mongodb
  12. нужно свое dto для репоста   //! public repostedPost: PostId...;
  13. удалить BaseMemoryRepository если не будет использоватся?
  14. всем свойствам в Entity.populate нужно  "?? undefined;"
  15. возможно BlogTagModule и вовсе не нужен, сразу в BlogPostModule обрабатывать таги
  16. сам добавил "entity.id = document.id; //! временно" в BaseMongoRepository
  17. в Post добавить likesCount, commentsCount, как отдавать комменты?, есть ли детейл поста?
  18. для Пользователя дополнительный запрос о количестве подписок на него и количестве его комментариев... возможно сделать поля в пользователе или считать, т.к. запрос отдельный
  19. пагинация для комментариев
  20. пагинация для постов
  21. для списка комментариев и нового комментария к посту нужно ли выводить детальную информацию о пользователе, пока оставил userId? а postId нужен?
  22. есть копирвоание либ... "export const PostApiProperty = {"
        может сделать общие либы с описанием?
        еще
          status: HttpStatus.UNAUTHORIZED,
          status: HttpStatus.BAD_REQUEST,
          NotFound: 'Post not found'
  23. нужно ли для ошибок BAD_REQUEST и UNAUTHORIZED описать тело ответа? а как?
    {
       "message": [
          "Type must by one of video, text, quote, photo, link"
       ],
         "error": "Bad Request",
        "statusCode": 400
      }
  24. проверка существования поста по id, в комментариях и постах
        будет еще навешана проверка - валидатор?
        перед вставкой вызвать поиск? через BlogPostService или BlogPostRepository
          а что правильней использовать Service или Repository
        обработать try.... Foreign key constraint failed on the field: `comments_post_id_fkey (index)`
  25. если будем валидировать userId и postId, то добавить/убрать в/из описания ответов BadRequest
          MongoIdValidationPipe, а для GUID?
          в комментариях и постах
  26. у всех контоллеров/controller не прописано возвращаемое занчение
  27. для поста с типом фото, как загружать картинку, после добавления или сразу?
  28. черновики других пользоватетлей доступны при запросе детальной информаций о посте?
        в DetailPostRdo оставил State
  29. проверка .env
        [Account JWTConfig Validation Error]: "accessTokenSecret" is required  / accessTokenSecret: Joi.string().required(),
        сделавть чтоб писал "не указан JWT_ACCESS_TOKEN_SECRET!"
  30. entity.id = undefined; //! пустая строка из базового класса и id не гененируется
        А в тегах вы зывается конструктор с объектом и populate записавает в _id undefined
  31. при получении поста для тегов отдавать только заголовки?
        добавил в rdo:
          @Transform(({ value }) => value.map((item: { title: string; }) => item.title))
  32. пост с типом фото, как сразу грузить файл в dto при создании илии обновлении, нужно позже убрать из проверок imagePath
  33. при создании поста, что вернут PostRdo? может DetailPostRdo? а как с репостом?


Заметки:
  1. как же выводить подтипы ....
    не сработало export type ReturnTypeToPOJOFunction<T extends StorableEntity<T>> = ReturnType<T['toPOJO']>;
    а как T['id']
  2. get-mongoose-options.ts - а как добраться
    из
      useFactory: async (config: ConfigService) => {
    к
      private readonly databaseConfig: ConfigType<typeof mongoDbConfig>
    чтобы заменить
      config.get<string>(ConfigAlias.MongoDbUsername)
    на
      databaseConfig.username
  3. а можно делать какие то алиасы или константы в project.json например для "cwd": "libs/blog/models/prisma"
  4. проверить в модулях
      - заменить " на '?
      - поискать <from ">
      - поискать <from '@> и переносом строки разделить и сгруппировать
      - еще <, }>
      - проверить неиспользуемые импорты

