Вопросы:
  1. CheckAuthGuard срабатывает раньше useGlobalInterceptors - RequestIdInterceptor и в request[RequestProperty.RequestId] пусто
       и в запрос на проверку токена нечего передать...
       можно дополнительно сгененерировать RequestId
         или сделать generateRequestIdGuard подключив глобально app.useGlobalGuards
  2. удалил InjectUserIdInterceptor, а userId добавляю сразу в CheckAuthGuard
       может поменять имя?
  3. validatePostData(dto: CreatePostDto | UpdatePostDto) - сделать Guard и валидировать ранее...
  4. JwtAccessStrategy возможно есть обработчик для изменения поведения или сделать отдельный Guard которые не валят ошибку...
       чтобы убрать <.headers['authorization']>
       если сложно, то для api-gate можно сделать перехват ошибки axios запроса
  5. удалить BaseMemoryRepository если не будет использоваться?

  1. Реализовать маршруты:
    1.2. blog
      1.2.1. поиск блогов по названию:
              Поиск публикации происходит по заголовку публикации.
              Достаточно совпадения отдельных слов.
              В поиске участвуют все опубликованные публикации, у которых есть заголовки (название публикации).
              Поиск не возвращает больше 20 публикаций.
              без пагинации
      1.2.2. отправить оповещения всем подписчикам при добавлении новой публикации
               наверное через Rabbit, но кто разгребет очередь?
                 BlogSubscriptionModule?
                 дополнительный сервис?...
                   BlogSubscriptionModule вынести из Blog! c отдельной монгой
      1.2.3. лайки
            проверить/добавить уникальность 1 лайк на 1 пост от 1го пользователя
            при добавлении лайка увеличить количество лайков поста, при удалении уменьшить
            что вернуть после лайка/анлайка
              только http-статус?
              обновленное количество лайков?
              обновленный пост? можно через api-gate...  убрать в Заметки.п.16?
      1.2.4. подписки
            авторизация
            проверить/добавить уникальность 1 подписка на 1 пост от 1го пользователя
            что вернуть после подписки/отписки
              только http-статус?
              обновленной информации о пользователе? можно через api-gate...  убрать в Заметки.п.16?
      1.2.5. моя лента
    1.3. api-gate
      1.3.1. объеденить все Swagger?
      1.3.2. дополнять список публикаци информацией о пользователе:
               (имя, фамилия, идентификатор, email).
               в маркапах есть еще фото профиля!
      1.3.3. дополнять детальную публикацией информацией о пользователе:
               из списка (имя, фамилия, идентификатор, email).
               в маркапах есть еще фото профиля и дата регистрации!
      1.3.3. дополнять список комментариев информацией о пользователе:
               в ТЗ ничего не указано, что дополянет о пользовате..
               в маркапах: фото, имя, id
      1.3.4. дополнить при получении списка комментариев
      1.3.5. дополнить после добавления комментария
      1.3.6. при получении детальной информации о пользователе, дополнить количестве подписок на него и количестве его постов


Заметки:
  1. как же выводить подтипы ....
    не сработало export type ReturnTypeToPOJOFunction<T extends StorableEntity<T>> = ReturnType<T['toPOJO']>;
    а как T['id']
  2. get-mongoose-options.ts - а как добраться
    из
      useFactory: async (config: ConfigService) => {
    к
      private readonly databaseConfig: ConfigType<typeof mongoDbConfig>
    чтобы заменить
      config.get<string>(ConfigAlias.MongoDbUsername)
    на
      databaseConfig.username
    ------
    config: ConfigType<typeof fileStorageConfig>
      можно по имени this.config.uploadDirectory
      а можно так сделать в сервисе при инициализации монгоДБ?
  3. а можно делать какие то алиасы или константы в project.json например для "cwd": "libs/blog/models/prisma"
  4. проверить в модулях
      - заменить " на '?
      - поискать <: ">
      - поискать <from ">
      - поискать <from '@> и переносом строки разделить и сгруппировать
      - поискать <from ".../dist/....>
      - еще <, }>
      - проверить неиспользуемые импорты
      - <' +>
  5. Title: { description: 'The post title for types: video and text',
    все ограничения перечислены в PostFieldsByType
  6. есть одинаковые сообщения в разных бибилиотеках, возможно стоит сделать общие сообщения и описание, например "export const PostApiProperty = {"
      status: HttpStatus.UNAUTHORIZED,
      status: HttpStatus.BAD_REQUEST,
      NotFound: 'Post not found'
  7. в маркапах детальной информации поста есть:
       количество просмотров
       количество репостов, и видимо предусмотрен маршрут показать все репосты
  8. теги в маркапах начинаются с #
  9. как сделать базовый класс PageQuery и от него заменить BlogPostCommentQuery и на его основе сделать BlogPostQuery
  10. попробовать сделать дженерик для фабрики
  11. попробовать вынести конфиг для монгоДБ
  12. как в swagger добавить описание статического маршрута http://localhost:4200/static/1.txt
  13. у всех контоллеров/controller не прописано возвращаемое занчение? так и оставить? - можно оставить можно и дописать
  14. попробовать сделать валидаторы для проверки
        существования поста по id
        существования пользователя по id
  15. попробовать добавить в базу ограничения post.type in PostType.values() и post.state in PostState.values()
  16. дополнительные сценарии, в ТЗ не нашел...
    16.1. посты
      в полученный список постов(или детализацию поста) добавить признак - лайкал ли я этот пост
        для не авторизированных заполнять false
        для авторизированных
          либо получить все лайки и .map?
          либо получить все лайки по отобранным постам и .map? можно уже в api-gate
          либо дергать по одному?
          либо дергать с основным запросом?
      при получении данных о пользоватле добавлять признак - подписан ли я на него
        то же что и в лайках
    16.2. профиль:
      мои лайки - посты лайкнутые мной
      лайки моих постов
  17. попробовать Factory сделать через дженерик, можно заменить в нескольких модулях
  18. в ошибку ри загрузке файла "Unexpected field" добавить имя ожидаемого поля
    !заменить ParseFilePipeBuilder
    попробовать - https://docs.nestjs.com/techniques/file-upload
  19. logout доделать
        ничего не выполняем, т.к. токен нужно забыть на клиентской стороне
        НО можно удалить refresh token
          @UseGuards(JwtAuthGuard) не поставить
          нужно в заголовках посмотреть есть ли там token
          если это это refresh token, то обнулить его
  20. удилить AnyExceptionFilter
  21. проверять await для <...Service.> и <...Repository.>
  22. await this.notifyService.registerSubscriber({ email, name });
        а если будет RabbitMQ не досупен... клиенту придет 500, при этом пользователь будет зарегестрирован...
  23. как валидировать LoginUserDto, т.к. dto заменили на <@Req() { user }: RequestWithBlogUserEntity>?
      типы сделал не такие как в демо, т.к. возвращаемые значения другие.
      валидацию сделал вручную в LocalStrategy
      const error = validateSync(plainToClass(LoginUserDto, dto));
https://github.com/swagger-api/swagger-ui/issues/4741
https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.1.md#special-considerations-for-multipart-content
https://github.com/nestjs/swagger/issues/167
https://stackoverflow.com/questions/66605192/file-uploading-along-with-other-data-in-swagger-nestjs
// пока так...
//в DTO
  //name: 'tags[]', //!  - более менне -  tags: [ 'tag1,tag2' ] - сделать с одним
// из .http
--boundary
Content-Disposition: form-data; name="tag"
tag1
--boundary
Content-Disposition: form-data; name="tag"
tag2
--
// из контроллера
  @ApiBody({
    schema: {
      type: 'object',
      properties: {
        //'tags[]': {
        'tags[0]': {
          example: 'tag1',
          type: 'string'
        },
        'tags[1]': {
          example: 'tag2',
          type: 'string'
        },
        email: { type: 'string' },
        name: { type: 'string' },
        password: { type: 'string' },
        avatarFile: {
          type: 'string',
          format: 'binary'
        }
      }
    }
  })
//
  24. ТЗ 1.1. Регистрация доступна только анонимным клиентам. - public async create(@Body() dto: CreateUserDto) {
      api-gate добавит userId ко все запросам? или проанализировать header?
      в сам сервис добавил header Authorization - попробовать добавить интерсептор он подойдет в login
  25. для блога
        возможно получение всех лайков пользователя/только своих
        возможно получение всех подписок пользователя/только своих
  26. Controller: [rdo, dto, entity], Service: [Entity], Ropositary: [Entity], Factory: [Entity]
        'Repository.save(' почти всегда сервис делает entity:
          const commentEntity = new BlogPostCommentEntity({ message, postId, userId });
          await this.blogPostCommentRepository.save(commentEntity);
          return commentEntity;
          ->
          return await this.blogPostCommentRepository.save({ message, postId, userId });
        ? может контроллен должен не знать об Entity?
  27. базовый класс для сервиса
        вынести в него - private checkAuthorization(currentUserId: string)
  28. .env
        project\apps\...\.env - nx или node добавляет в process.env при запуске!
        envFilePath: ENV_FILE_PATH - загружает ConfigModule в process.env!
          но нет ошибки при отсутвии файла! как добавить?
        а можно заставить Joi вывести сразу все ошибки валидации, сейчас на первой ошибке прекращает валидацию...
        вынести/обеденить конфигурации в один модуль
        account-config сделать в один как  у всех
        для blog сделать конфиг
          как инициилизапровать подключение для PrismaClientModule, выставить env - DATABASE_URL програмно?
  29. под windows не водит имя для миграции db:migrate, выполнил отдельно всю команду из нужного каталога
        для .env
          cd readme/project/libs/blog/models/prisma
          (Windows) mklink /h .env ..\..\..\..\apps\blog\.env
      !! к сдаче перепроверить генерацию в командах дописаны файлы пути до env
      !! если что вернуть или указать нужный файл в конфигурации
  30. заполнить данные в mongodb, и в разных сервисах
  31. а как забрать через config module?
        @RabbitSubscribe({
          exchange: process.env[ConfigAlias.AppRabbitExchange], //! 'readme.notify', а как забрать через config module?
          routingKey: RabbitRouting.AddSubscriber,
          queue: process.env[ConfigAlias.AppRabbitQueue] //! 'readme.notify.income', а как забрать через config module?
        })
  32. при смене пароля сделать, аннулировать прешедший рефреш токен и выдать новый, если он был передан
  33. валидация сущностей на существование (exist), до обработки запросов как в прошлом курсе (пользователи посты)
        сейчас есть валидация на соответские формату
  34. @Inject(...Config.KEY) иногда в конструктореинога выше, перепроверить как сделать однотипно
        если во вне, то при вызове в конструкторе пусто - undefined
  35. ограничения на редактирвоание поста?
        может разрешено менять статус? и/или дату поста?
        можно делать репост своего поста?
