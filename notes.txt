Вопросы:
  1. интерфейсы для публикаций - сделать отдельные или излишние поля...
  2. проверка ДТО будет потом?
       "login22": "Keks1asdasdasdasdasdasdasdasdasddsadasd11"
  3. при регистрации, входе, получении данных... отдает хеш пароля passwordHash - убрать?
        позже будет применен UserRdo?
        не отработывает fillDto, если попробовать преобразовать, то ошибка....
    public async create(@Body() dto: CreateUserDto)
    public async login(@Body() dto: LoginUserDto)
    public async show(@Param('id') id: string)
  4. нужен ли logout?
  5. /api/auth/register саму функциональнность добавления перенести в пользователя?
  6. /api/auth/:id перенести в пользователя /api/user/:id ?
  7. смена пароля?
  8. после регитсрации возвращаю - type: UserRdo, как при getById... где описано что отдать... только id или весь объект?
  9. Swagger Body type Class1|Class2 не получилось... может не весь класс а поле data выделить в ApiProperty?
    https://docs.nestjs.com/openapi/types-and-parameters
      oneOf: [
        { $ref: getSchemaPath(Class1) },
        { $ref: getSchemaPath(Class2) },
      ],
    потом не собирает схемы CLass1 и Class2
    !! для новых полей сделать красиваое описание для разных типов...
    !! добавить дополнительную проверку на тип и обязательность полей
  10. UpdatePostDto - @IsOptional() ??  А в Swagger * - обязательный ?
  11. задействовать настройки подключения к postgres из project/apps/blog/blog.dev.env
    сейчас подключение из project/libs/blog/models/prisma/.env  ? или тут для работы prisma-cli и seed.ts ?
    после выполенения generate DATABASE_URL из project/libs/blog/models/prisma/.env закидывается значением по умолчанию, можно переопределить...
    POSTGRES_HOST и POSTGRES_PORT
    А может и сам prisma/.env слинковать с blog/blog.dev.env?
  12. под windows не водит имя для миграции db:migrate ,  выполнил отдельно всю команду из нужного каталога
  13. заполенить данные в mongodb
  14. нужно свое dto для репоста   //! public repostedPost: PostId...;
  15. удалить BaseMemoryRepository если не будет использоватся?
  16. всем свойствам в Entity.populate нужно  "?? undefined;"
  17. возможно BlogTagModule и вовсе не нужен, сразу в BlogPostModule обрабатывать таги
  18. сам добавил "entity.id = document.id; //! временно" в BaseMongoRepository


Заметки:
  1. как же выводить подтипы ....
    не сработало export type ReturnTypeToPOJOFunction<T extends StorableEntity<T>> = ReturnType<T['toPOJO']>;
    а как T['id']
  2. get-mongoose-options.ts - а как добратся
    из
      useFactory: async (config: ConfigService) => {
    к
      private readonly databaseConfig: ConfigType<typeof mongoDbConfig>
    чтобы заменить
      config.get<string>(ConfigAlias.MongoDbUsername)
    на
      databaseConfig.username
  3. а можно делать какие то алиасы или константы в project.json например для "cwd": "libs/blog/models/prisma"
