Вопросы:
  1. Реализовать маршруты:
    1.1. account
      1.1.0. добавить описание для авторизации в Swagger
      1.1.1. нужен logout! - DELETE - //ничего не выполняем, т.к. токен нужно забыть на клиентской стороне - noContent
              и скорре всего на api нужно обнулить refresh token
      1.1.2. нужна смена пароля! /api/auth/change-password
      1.1.3. для Пользователя дополнительный запрос или через api-gate
        о количестве подписок на него и количестве его комментариев...
          возможно сделать поля в пользователе или считать, т.к. запрос отдельный
        возможно получение всех лайков пользователя/только своих
        возможно получение всех подписок пользователя/только своих
      1.1.4. /api/auth/register саму функциональнность добавления перенести в пользователя?
      1.1.5. /api/auth/:id перенести в пользователя /api/users/:id ?
      1.1.6. после регитсрации возвращаю - type: UserRdo, как при getById... где описано что отдать... только id или весь объект?
      1.1.7. exist хотябы в сервисе
      1.1.8. для списка комментариев и нового комментария к посту нужно ли выводить детальную информацию о пользователе, пока оставил userId? а postId нужен? - скорей всего через api-gate
      1.1.9. ТЗ 1.1. Регистрация доступна только анонимным клиентам.
              как проверить в public async create(@Body() dto: CreateUserDto) {
              api-gate добавит userId ко все запросам и если тут пусто, то разрешить
    1.2. blog
      1.2.0. отправить оповещения всем подписчикам при добавлении новой публикации
               наверное через Rabbit, но кто разгребет очередь?
                 BlogSubscriptionModule?
                 дополнительный сервис?...
                   BlogSubscriptionModule вынести из Blog! c отдельной монгой
      1.2.0. запрет редактирования перепоста или некоторые поля можно менять статус, дату публикации?
      1.2.1. для поста с типом фото, как загружать картинку, после добавления или сразу?
              нужно позже убрать из проверок imagePath
      1.2.2. сделать репост поста
            авторизация
            Репост одной публикации можно сделать один раз. в БД добавил! нужно в сервисе
            а редактировать репост нельзя? он же репост
            проверить на черновик
            проверить авторизацию
            репост своего поста возможен? по ТЗ "Авторизованные пользователи могут репостить публикации других пользователей."
      1.2.3. свои посты выбираются по своему пользователю? "?userId=...." или  /my_posts ?
               возможно для своих постов будет отдельный маршрут, но в ТЗ указан один маршрут для всех и параметры одни
      1.2.4. лайки
            авторизация
            проверить/добавить уникальность 1 лайк на 1 пост от 1го пользователя
            при добавлении лайка увеличить количество лайков поста, при удалении уменьшить
            что вернуть после лайка/анлайка
              только http-статус?
              обновленное количество лайков?
              обновленный пост? можно через api-gate...  убрать в Заметки.п.16?
      1.2.5. подписки
            авторизация
            проверить/добавить уникальность 1 подписка на 1 пост от 1го пользователя
            что вернуть после подписки/отписки
              только http-статус?
              обновленной информации о пользователе? можно через api-gate...  убрать в Заметки.п.16?
      1.2.7. моя лента
      1.2.8. в ТЗ не указана сортировка комментариев, видимо как добавлены, посомтреть как возвращает БД и если что добавить orderBy.createdAt = desc
    1.3. api-gate
      1.3.1. объеденить все Swagger?
  2. под windows не водит имя для миграции db:migrate, выполнил отдельно всю команду из нужного каталога
      для .env
        cd readme/project/libs/blog/models/prisma
        (Windows) mklink /h .env ..\..\..\..\apps\blog\.env
  3. заполнить данные в mongodb, и в разных сервисах
  4. удалить BaseMemoryRepository если не будет использоватся?
  5. всем свойствам в Entity.populate нужно  "?? undefined;"
  6. сам добавил "entity.id = document.id; //! временно" в BaseMongoRepository, для created.user.rdo - будет в коммитах про API-Gate
  7. .env
        project\apps\...\.env - nx или node добавляет в process.env при запуске!
        envFilePath: ENV_FILE_PATH - загружает ConfigModule в process.env!
          но нет ошибки при отсутвии файла! как добавить?
        а можно заставить Joi вывести сразу все ошибки валидации, сейчас на первой ошибке прекращает валидацию...
        вынести/обеденить конфигурации в один модуль
        account-config сделать в один как  у всех
        для blog сделать конфиг
  8. entity.id = undefined; //! пустая строка из базового класса и id не гененируется
        А в тегах вызывается конструктор с минимальным объектом и при вызове populate записывает в _id undefined
  9. куда делся первый "@Inject(*.KEY)"?
  10. что такое FileSchema.virtul('id').get( ?  может сделать как BlogUserModel?
        отключил это пока, отрабатывает - entity.id = document.id;
        и при сохраннении даты пустые
  11. а как забрать через config module?
        @RabbitSubscribe({
          exchange: process.env[ConfigAlias.AppRabbitExchange], //! 'readme.notify', а как забрать через config module?
          routingKey: RabbitRouting.AddSubscriber,
          queue: process.env[ConfigAlias.AppRabbitQueue] //! 'readme.notify.income', а как забрать через config module?
        })
  12. Controller: [rdo, dto, entity], Service: [Entity], Ropositary: [Entity], Factory: [Entity]
        'Repository.save(' почти всегда сервис делает entity:
          const commentEntity = new BlogPostCommentEntity({ message, postId, userId });
          await this.blogPostCommentRepository.save(commentEntity);
          return commentEntity;
          ->
          return await this.blogPostCommentRepository.save({ message, postId, userId });
        ? может контроллен должен не знать об Entity?
  13. базовый класс для сервиса
        вынести в него - private checkAuthorization(currentUserId: string)


Заметки:
  1. как же выводить подтипы ....
    не сработало export type ReturnTypeToPOJOFunction<T extends StorableEntity<T>> = ReturnType<T['toPOJO']>;
    а как T['id']
  2. get-mongoose-options.ts - а как добраться
    из
      useFactory: async (config: ConfigService) => {
    к
      private readonly databaseConfig: ConfigType<typeof mongoDbConfig>
    чтобы заменить
      config.get<string>(ConfigAlias.MongoDbUsername)
    на
      databaseConfig.username
    ------
    config: ConfigType<typeof fileStorageConfig>
      можно по имени this.config.uploadDirectory
      а можно так сделать в сервисе при инициализации монгоДБ?
  3. а можно делать какие то алиасы или константы в project.json например для "cwd": "libs/blog/models/prisma"
  4. проверить в модулях
      - заменить " на '?
      - поискать <from ">
      - поискать <from '@> и переносом строки разделить и сгруппировать
      - поискать <from ".../dist/....>
      - еще <, }>
      - проверить неиспользуемые импорты
  5. Title: { description: 'The post title for types: video and text',
    все ограничения перечислены в PostFieldsByType
  6. есть одинаковые сообщения в разных бибилиотеках, возможно стоит сделать общие сообщения и описание, например "export const PostApiProperty = {"
      status: HttpStatus.UNAUTHORIZED,
      status: HttpStatus.BAD_REQUEST,
      NotFound: 'Post not found'
  7. в маркапах детальной информации поста есть:
       количество просмотров
       количество репостов, и видимо предусмотрен маршрут показать все репосты
  8. теги в маркапах начинаются с #
  9. как сделать базовый класс PageQuery и от него заменить BlogPostCommentQuery и на его основе сделать BlogPostQuery
  10. попробовать сделать дженерик для фабрики
  11. попробовать вынести конфиг для монгоДБ
  12. как в swagger добавить описание статического маршрута http://localhost:4200/static/1.txt
  13. у всех контоллеров/controller не прописано возвращаемое занчение? так и оставить? - можно оставить можно и дописать
  14. попробовать сделать валидаторы для проверки
        существования поста по id
        существования пользователя по id
  15. попробовать добавить в базу ограничения post.type in PostType.values() и post.state in PostState.values()
  16. дополнительные сценарии, в ТЗ не нашел...
    16.1. посты
      в полученный список постов(или детализацию поста) добавить признак - лайкал ли я этот пост
        для не авторизированных заполнять false
        для авторизированных
          либо получить все лайки и .map?
          либо получить все лайки по отобранным постам и .map? можно уже в api-gate
          либо дергать по одному?
          либо дергать с основным запросом?
      при получении данных о пользоватле добавлять признак - подписан ли я на него
        то же что и в лайках
    16.2. профиль:
      мои лайки - посты лайкнутые мной
      лайки моих постов
  17. попробовать Factory сделать через дженерик, можно заменить в нескольких модулях


