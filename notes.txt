Вопросы:
  2. нужен logout!
  3. /api/auth/register саму функциональнность добавления перенести в пользователя?
  4. /api/auth/:id перенести в пользователя /api/users/:id ?
  5. нужна смена пароля! /api/auth/change-password
  6. после регитсрации возвращаю - type: UserRdo, как при getById... где описано что отдать... только id или весь объект?
  7. задействовать настройки подключения к postgres из project/apps/blog/blog.dev.env
    сейчас подключение из project/libs/blog/models/prisma/.env  ? или тут для работы prisma-cli и seed.ts ?
    после выполенения generate DATABASE_URL из project/libs/blog/models/prisma/.env закидывается значением по умолчанию, можно переопределить...
    POSTGRES_HOST и POSTGRES_PORT
    А может и сам prisma/.env слинковать с blog/blog.dev.env?
  8. под windows не водит имя для миграции db:migrate,  выполнил отдельно всю команду из нужного каталога
  9. заполенить данные в mongodb
  10. нужно свое dto для репоста //! public repostedPost: PostId...;  и отдавать детальное
  11. удалить BaseMemoryRepository если не будет использоватся?
  12. всем свойствам в Entity.populate нужно  "?? undefined;"
  13. возможно BlogTagService и вовсе не нужен, сразу в BlogPostReposipory обрабатывать теги
  14. сам добавил "entity.id = document.id; //! временно" в BaseMongoRepository, для created.user.rdo
  15. для Пользователя дополнительный запрос о количестве подписок на него и количестве его комментариев... возможно сделать поля в пользователе или считать, т.к. запрос отдельный
  16. пагинация для комментариев
  17. пагинация для постов
  18. для списка комментариев и нового комментария к посту нужно ли выводить детальную информацию о пользователе, пока оставил userId? а postId нужен?
  19. проверка существования поста по id, в комментариях и постах
        будет еще навешана проверка - валидатор?
        перед вставкой вызвать поиск? через BlogPostService или BlogPostRepository
          а что правильней использовать Service или Repository
        обработать try.... Foreign key constraint failed on the field: `comments_post_id_fkey (index)`
  20. будем валидировать postId? как для userId MongoIdValidationPipe, а для GUID?
          в комментариях и постах
  21. у всех контоллеров/controller не прописано возвращаемое занчение? так и оставить?
  22. для поста с типом фото, как загружать картинку, после добавления или сразу?
        нужно позже убрать из проверок imagePath
  23. черновики других пользоватетлей доступны при запросе детальной информаций о посте?
        если пост сначала был опубликован и другой пользователь уже смотрел, а потом в черновики под автором и обновить страницу у пользователя
  24. проверка .env
        [Account JWTConfig Validation Error]: "accessTokenSecret" is required  / accessTokenSecret: Joi.string().required(),
        сделавть чтоб писал "не указан JWT_ACCESS_TOKEN_SECRET!"
  25. entity.id = undefined; //! пустая строка из базового класса и id не гененируется
        А в тегах вызывается конструктор с минимальным объектом и при вызове populate записывает в _id undefined
  26. при получении поста в теги отдавать только заголовки?
        добавил в rdo:
          @Transform(({ value }) => value.map((item: { title: string; }) => item.title))
  27. доделать обновление поста
  28. как в query передавать несколько тегов и еще на русском
        posts?limit=2&sortDirection=desc&tags[]=tag1,tag2


Заметки:
  1. как же выводить подтипы ....
    не сработало export type ReturnTypeToPOJOFunction<T extends StorableEntity<T>> = ReturnType<T['toPOJO']>;
    а как T['id']
  2. get-mongoose-options.ts - а как добраться
    из
      useFactory: async (config: ConfigService) => {
    к
      private readonly databaseConfig: ConfigType<typeof mongoDbConfig>
    чтобы заменить
      config.get<string>(ConfigAlias.MongoDbUsername)
    на
      databaseConfig.username
  3. а можно делать какие то алиасы или константы в project.json например для "cwd": "libs/blog/models/prisma"
  4. проверить в модулях
      - заменить " на '?
      - поискать <from ">
      - поискать <from '@> и переносом строки разделить и сгруппировать
      - еще <, }>
      - проверить неиспользуемые импорты
  5. Title: { description: 'The post title for types: video and text',
    все ограничения перечислены в PostFieldsByType
  6. есть одинаковые сообщения в разных бибилиотеках, возможно стоит сделать общие сообщения и описание, например "export const PostApiProperty = {"
      status: HttpStatus.UNAUTHORIZED,
      status: HttpStatus.BAD_REQUEST,
      NotFound: 'Post not found'
  7. в маркапах детальной информации поста есть:
       количество просмотров
       количество репостов, и видимо предусмотрен маршрут показать все репосты
  8. теги в маркапах начинаются с #

